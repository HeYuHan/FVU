// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: testmsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "testmsg.pb.h"
#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace FVU {
class ChildMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ChildMessage> {
} _ChildMessage_default_instance_;
class TestMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TestMessage> {
} _TestMessage_default_instance_;

namespace protobuf_testmsg_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChildMessage, fixedvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, boolvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, doublevalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, floatvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, intvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, uintvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, int64value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, uint64value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, sint32value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, stringvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, bytesvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessage, childmessage_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ChildMessage)},
  { 5, -1, sizeof(TestMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChildMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "testmsg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _ChildMessage_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _TestMessage_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ChildMessage_default_instance_.DefaultConstruct();
  _TestMessage_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rtestmsg.proto\022\003FVU\"\"\n\014ChildMessage\022\022\n\n"
      "FixedValue\030\001 \001(\007\"\376\001\n\013TestMessage\022\021\n\tBool"
      "Value\030\001 \001(\010\022\023\n\013DoubleValue\030\002 \001(\001\022\022\n\nFloa"
      "tValue\030\003 \001(\002\022\020\n\010IntValue\030\004 \001(\005\022\021\n\tUIntVa"
      "lue\030\005 \001(\r\022\022\n\nInt64Value\030\006 \001(\003\022\023\n\013UInt64V"
      "alue\030\007 \001(\004\022\023\n\013SInt32Value\030\010 \001(\021\022\023\n\013Strin"
      "gValue\030\t \001(\t\022\022\n\nBytesValue\030\n \001(\014\022\'\n\014chil"
      "dMessage\030\013 \003(\0132\021.FVU.ChildMessageb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 321);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "testmsg.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_testmsg_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChildMessage::kFixedValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChildMessage::ChildMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_testmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FVU.ChildMessage)
}
ChildMessage::ChildMessage(const ChildMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fixedvalue_ = from.fixedvalue_;
  // @@protoc_insertion_point(copy_constructor:FVU.ChildMessage)
}

void ChildMessage::SharedCtor() {
  fixedvalue_ = 0u;
  _cached_size_ = 0;
}

ChildMessage::~ChildMessage() {
  // @@protoc_insertion_point(destructor:FVU.ChildMessage)
  SharedDtor();
}

void ChildMessage::SharedDtor() {
}

void ChildMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChildMessage::descriptor() {
  protobuf_testmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_testmsg_2eproto::file_level_metadata[0].descriptor;
}

const ChildMessage& ChildMessage::default_instance() {
  protobuf_testmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChildMessage* ChildMessage::New(::google::protobuf::Arena* arena) const {
  ChildMessage* n = new ChildMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChildMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:FVU.ChildMessage)
  fixedvalue_ = 0u;
}

bool ChildMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FVU.ChildMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 FixedValue = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &fixedvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FVU.ChildMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FVU.ChildMessage)
  return false;
#undef DO_
}

void ChildMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FVU.ChildMessage)
  // fixed32 FixedValue = 1;
  if (this->fixedvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->fixedvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:FVU.ChildMessage)
}

::google::protobuf::uint8* ChildMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FVU.ChildMessage)
  // fixed32 FixedValue = 1;
  if (this->fixedvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->fixedvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:FVU.ChildMessage)
  return target;
}

size_t ChildMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FVU.ChildMessage)
  size_t total_size = 0;

  // fixed32 FixedValue = 1;
  if (this->fixedvalue() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChildMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FVU.ChildMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ChildMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChildMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FVU.ChildMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FVU.ChildMessage)
    MergeFrom(*source);
  }
}

void ChildMessage::MergeFrom(const ChildMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FVU.ChildMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.fixedvalue() != 0) {
    set_fixedvalue(from.fixedvalue());
  }
}

void ChildMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FVU.ChildMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChildMessage::CopyFrom(const ChildMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FVU.ChildMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChildMessage::IsInitialized() const {
  return true;
}

void ChildMessage::Swap(ChildMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChildMessage::InternalSwap(ChildMessage* other) {
  std::swap(fixedvalue_, other->fixedvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChildMessage::GetMetadata() const {
  protobuf_testmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_testmsg_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChildMessage

// fixed32 FixedValue = 1;
void ChildMessage::clear_fixedvalue() {
  fixedvalue_ = 0u;
}
::google::protobuf::uint32 ChildMessage::fixedvalue() const {
  // @@protoc_insertion_point(field_get:FVU.ChildMessage.FixedValue)
  return fixedvalue_;
}
void ChildMessage::set_fixedvalue(::google::protobuf::uint32 value) {
  
  fixedvalue_ = value;
  // @@protoc_insertion_point(field_set:FVU.ChildMessage.FixedValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestMessage::kBoolValueFieldNumber;
const int TestMessage::kDoubleValueFieldNumber;
const int TestMessage::kFloatValueFieldNumber;
const int TestMessage::kIntValueFieldNumber;
const int TestMessage::kUIntValueFieldNumber;
const int TestMessage::kInt64ValueFieldNumber;
const int TestMessage::kUInt64ValueFieldNumber;
const int TestMessage::kSInt32ValueFieldNumber;
const int TestMessage::kStringValueFieldNumber;
const int TestMessage::kBytesValueFieldNumber;
const int TestMessage::kChildMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestMessage::TestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_testmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FVU.TestMessage)
}
TestMessage::TestMessage(const TestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      childmessage_(from.childmessage_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stringvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stringvalue().size() > 0) {
    stringvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stringvalue_);
  }
  bytesvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bytesvalue().size() > 0) {
    bytesvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytesvalue_);
  }
  ::memcpy(&doublevalue_, &from.doublevalue_,
    reinterpret_cast<char*>(&sint32value_) -
    reinterpret_cast<char*>(&doublevalue_) + sizeof(sint32value_));
  // @@protoc_insertion_point(copy_constructor:FVU.TestMessage)
}

void TestMessage::SharedCtor() {
  stringvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytesvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&doublevalue_, 0, reinterpret_cast<char*>(&sint32value_) -
    reinterpret_cast<char*>(&doublevalue_) + sizeof(sint32value_));
  _cached_size_ = 0;
}

TestMessage::~TestMessage() {
  // @@protoc_insertion_point(destructor:FVU.TestMessage)
  SharedDtor();
}

void TestMessage::SharedDtor() {
  stringvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytesvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMessage::descriptor() {
  protobuf_testmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_testmsg_2eproto::file_level_metadata[1].descriptor;
}

const TestMessage& TestMessage::default_instance() {
  protobuf_testmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestMessage* TestMessage::New(::google::protobuf::Arena* arena) const {
  TestMessage* n = new TestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:FVU.TestMessage)
  childmessage_.Clear();
  stringvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytesvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&doublevalue_, 0, reinterpret_cast<char*>(&sint32value_) -
    reinterpret_cast<char*>(&doublevalue_) + sizeof(sint32value_));
}

bool TestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FVU.TestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool BoolValue = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &boolvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double DoubleValue = 2;
      case 2: {
        if (tag == 17u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &doublevalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float FloatValue = 3;
      case 3: {
        if (tag == 29u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &floatvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 IntValue = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 UIntValue = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uintvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Int64Value = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int64value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 UInt64Value = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uint64value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 SInt32Value = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sint32value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string StringValue = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stringvalue().data(), this->stringvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FVU.TestMessage.StringValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes BytesValue = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytesvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FVU.ChildMessage childMessage = 11;
      case 11: {
        if (tag == 90u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_childmessage()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FVU.TestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FVU.TestMessage)
  return false;
#undef DO_
}

void TestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FVU.TestMessage)
  // bool BoolValue = 1;
  if (this->boolvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->boolvalue(), output);
  }

  // double DoubleValue = 2;
  if (this->doublevalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->doublevalue(), output);
  }

  // float FloatValue = 3;
  if (this->floatvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->floatvalue(), output);
  }

  // int32 IntValue = 4;
  if (this->intvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->intvalue(), output);
  }

  // uint32 UIntValue = 5;
  if (this->uintvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uintvalue(), output);
  }

  // int64 Int64Value = 6;
  if (this->int64value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->int64value(), output);
  }

  // uint64 UInt64Value = 7;
  if (this->uint64value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->uint64value(), output);
  }

  // sint32 SInt32Value = 8;
  if (this->sint32value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->sint32value(), output);
  }

  // string StringValue = 9;
  if (this->stringvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringvalue().data(), this->stringvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FVU.TestMessage.StringValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->stringvalue(), output);
  }

  // bytes BytesValue = 10;
  if (this->bytesvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->bytesvalue(), output);
  }

  // repeated .FVU.ChildMessage childMessage = 11;
  for (unsigned int i = 0, n = this->childmessage_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->childmessage(i), output);
  }

  // @@protoc_insertion_point(serialize_end:FVU.TestMessage)
}

::google::protobuf::uint8* TestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FVU.TestMessage)
  // bool BoolValue = 1;
  if (this->boolvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->boolvalue(), target);
  }

  // double DoubleValue = 2;
  if (this->doublevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->doublevalue(), target);
  }

  // float FloatValue = 3;
  if (this->floatvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->floatvalue(), target);
  }

  // int32 IntValue = 4;
  if (this->intvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->intvalue(), target);
  }

  // uint32 UIntValue = 5;
  if (this->uintvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uintvalue(), target);
  }

  // int64 Int64Value = 6;
  if (this->int64value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->int64value(), target);
  }

  // uint64 UInt64Value = 7;
  if (this->uint64value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->uint64value(), target);
  }

  // sint32 SInt32Value = 8;
  if (this->sint32value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->sint32value(), target);
  }

  // string StringValue = 9;
  if (this->stringvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringvalue().data(), this->stringvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FVU.TestMessage.StringValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->stringvalue(), target);
  }

  // bytes BytesValue = 10;
  if (this->bytesvalue().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->bytesvalue(), target);
  }

  // repeated .FVU.ChildMessage childMessage = 11;
  for (unsigned int i = 0, n = this->childmessage_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->childmessage(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:FVU.TestMessage)
  return target;
}

size_t TestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FVU.TestMessage)
  size_t total_size = 0;

  // repeated .FVU.ChildMessage childMessage = 11;
  {
    unsigned int count = this->childmessage_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->childmessage(i));
    }
  }

  // string StringValue = 9;
  if (this->stringvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stringvalue());
  }

  // bytes BytesValue = 10;
  if (this->bytesvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bytesvalue());
  }

  // double DoubleValue = 2;
  if (this->doublevalue() != 0) {
    total_size += 1 + 8;
  }

  // bool BoolValue = 1;
  if (this->boolvalue() != 0) {
    total_size += 1 + 1;
  }

  // float FloatValue = 3;
  if (this->floatvalue() != 0) {
    total_size += 1 + 4;
  }

  // int32 IntValue = 4;
  if (this->intvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intvalue());
  }

  // uint32 UIntValue = 5;
  if (this->uintvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uintvalue());
  }

  // int64 Int64Value = 6;
  if (this->int64value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->int64value());
  }

  // uint64 UInt64Value = 7;
  if (this->uint64value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uint64value());
  }

  // sint32 SInt32Value = 8;
  if (this->sint32value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->sint32value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FVU.TestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FVU.TestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FVU.TestMessage)
    MergeFrom(*source);
  }
}

void TestMessage::MergeFrom(const TestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FVU.TestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  childmessage_.MergeFrom(from.childmessage_);
  if (from.stringvalue().size() > 0) {

    stringvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stringvalue_);
  }
  if (from.bytesvalue().size() > 0) {

    bytesvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytesvalue_);
  }
  if (from.doublevalue() != 0) {
    set_doublevalue(from.doublevalue());
  }
  if (from.boolvalue() != 0) {
    set_boolvalue(from.boolvalue());
  }
  if (from.floatvalue() != 0) {
    set_floatvalue(from.floatvalue());
  }
  if (from.intvalue() != 0) {
    set_intvalue(from.intvalue());
  }
  if (from.uintvalue() != 0) {
    set_uintvalue(from.uintvalue());
  }
  if (from.int64value() != 0) {
    set_int64value(from.int64value());
  }
  if (from.uint64value() != 0) {
    set_uint64value(from.uint64value());
  }
  if (from.sint32value() != 0) {
    set_sint32value(from.sint32value());
  }
}

void TestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FVU.TestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessage::CopyFrom(const TestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FVU.TestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessage::IsInitialized() const {
  return true;
}

void TestMessage::Swap(TestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestMessage::InternalSwap(TestMessage* other) {
  childmessage_.UnsafeArenaSwap(&other->childmessage_);
  stringvalue_.Swap(&other->stringvalue_);
  bytesvalue_.Swap(&other->bytesvalue_);
  std::swap(doublevalue_, other->doublevalue_);
  std::swap(boolvalue_, other->boolvalue_);
  std::swap(floatvalue_, other->floatvalue_);
  std::swap(intvalue_, other->intvalue_);
  std::swap(uintvalue_, other->uintvalue_);
  std::swap(int64value_, other->int64value_);
  std::swap(uint64value_, other->uint64value_);
  std::swap(sint32value_, other->sint32value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestMessage::GetMetadata() const {
  protobuf_testmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_testmsg_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestMessage

// bool BoolValue = 1;
void TestMessage::clear_boolvalue() {
  boolvalue_ = false;
}
bool TestMessage::boolvalue() const {
  // @@protoc_insertion_point(field_get:FVU.TestMessage.BoolValue)
  return boolvalue_;
}
void TestMessage::set_boolvalue(bool value) {
  
  boolvalue_ = value;
  // @@protoc_insertion_point(field_set:FVU.TestMessage.BoolValue)
}

// double DoubleValue = 2;
void TestMessage::clear_doublevalue() {
  doublevalue_ = 0;
}
double TestMessage::doublevalue() const {
  // @@protoc_insertion_point(field_get:FVU.TestMessage.DoubleValue)
  return doublevalue_;
}
void TestMessage::set_doublevalue(double value) {
  
  doublevalue_ = value;
  // @@protoc_insertion_point(field_set:FVU.TestMessage.DoubleValue)
}

// float FloatValue = 3;
void TestMessage::clear_floatvalue() {
  floatvalue_ = 0;
}
float TestMessage::floatvalue() const {
  // @@protoc_insertion_point(field_get:FVU.TestMessage.FloatValue)
  return floatvalue_;
}
void TestMessage::set_floatvalue(float value) {
  
  floatvalue_ = value;
  // @@protoc_insertion_point(field_set:FVU.TestMessage.FloatValue)
}

// int32 IntValue = 4;
void TestMessage::clear_intvalue() {
  intvalue_ = 0;
}
::google::protobuf::int32 TestMessage::intvalue() const {
  // @@protoc_insertion_point(field_get:FVU.TestMessage.IntValue)
  return intvalue_;
}
void TestMessage::set_intvalue(::google::protobuf::int32 value) {
  
  intvalue_ = value;
  // @@protoc_insertion_point(field_set:FVU.TestMessage.IntValue)
}

// uint32 UIntValue = 5;
void TestMessage::clear_uintvalue() {
  uintvalue_ = 0u;
}
::google::protobuf::uint32 TestMessage::uintvalue() const {
  // @@protoc_insertion_point(field_get:FVU.TestMessage.UIntValue)
  return uintvalue_;
}
void TestMessage::set_uintvalue(::google::protobuf::uint32 value) {
  
  uintvalue_ = value;
  // @@protoc_insertion_point(field_set:FVU.TestMessage.UIntValue)
}

// int64 Int64Value = 6;
void TestMessage::clear_int64value() {
  int64value_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TestMessage::int64value() const {
  // @@protoc_insertion_point(field_get:FVU.TestMessage.Int64Value)
  return int64value_;
}
void TestMessage::set_int64value(::google::protobuf::int64 value) {
  
  int64value_ = value;
  // @@protoc_insertion_point(field_set:FVU.TestMessage.Int64Value)
}

// uint64 UInt64Value = 7;
void TestMessage::clear_uint64value() {
  uint64value_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TestMessage::uint64value() const {
  // @@protoc_insertion_point(field_get:FVU.TestMessage.UInt64Value)
  return uint64value_;
}
void TestMessage::set_uint64value(::google::protobuf::uint64 value) {
  
  uint64value_ = value;
  // @@protoc_insertion_point(field_set:FVU.TestMessage.UInt64Value)
}

// sint32 SInt32Value = 8;
void TestMessage::clear_sint32value() {
  sint32value_ = 0;
}
::google::protobuf::int32 TestMessage::sint32value() const {
  // @@protoc_insertion_point(field_get:FVU.TestMessage.SInt32Value)
  return sint32value_;
}
void TestMessage::set_sint32value(::google::protobuf::int32 value) {
  
  sint32value_ = value;
  // @@protoc_insertion_point(field_set:FVU.TestMessage.SInt32Value)
}

// string StringValue = 9;
void TestMessage::clear_stringvalue() {
  stringvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TestMessage::stringvalue() const {
  // @@protoc_insertion_point(field_get:FVU.TestMessage.StringValue)
  return stringvalue_.GetNoArena();
}
void TestMessage::set_stringvalue(const ::std::string& value) {
  
  stringvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FVU.TestMessage.StringValue)
}
#if LANG_CXX11
void TestMessage::set_stringvalue(::std::string&& value) {
  
  stringvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FVU.TestMessage.StringValue)
}
#endif
void TestMessage::set_stringvalue(const char* value) {
  
  stringvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FVU.TestMessage.StringValue)
}
void TestMessage::set_stringvalue(const char* value, size_t size) {
  
  stringvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FVU.TestMessage.StringValue)
}
::std::string* TestMessage::mutable_stringvalue() {
  
  // @@protoc_insertion_point(field_mutable:FVU.TestMessage.StringValue)
  return stringvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestMessage::release_stringvalue() {
  // @@protoc_insertion_point(field_release:FVU.TestMessage.StringValue)
  
  return stringvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestMessage::set_allocated_stringvalue(::std::string* stringvalue) {
  if (stringvalue != NULL) {
    
  } else {
    
  }
  stringvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringvalue);
  // @@protoc_insertion_point(field_set_allocated:FVU.TestMessage.StringValue)
}

// bytes BytesValue = 10;
void TestMessage::clear_bytesvalue() {
  bytesvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TestMessage::bytesvalue() const {
  // @@protoc_insertion_point(field_get:FVU.TestMessage.BytesValue)
  return bytesvalue_.GetNoArena();
}
void TestMessage::set_bytesvalue(const ::std::string& value) {
  
  bytesvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FVU.TestMessage.BytesValue)
}
#if LANG_CXX11
void TestMessage::set_bytesvalue(::std::string&& value) {
  
  bytesvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FVU.TestMessage.BytesValue)
}
#endif
void TestMessage::set_bytesvalue(const char* value) {
  
  bytesvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FVU.TestMessage.BytesValue)
}
void TestMessage::set_bytesvalue(const void* value, size_t size) {
  
  bytesvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FVU.TestMessage.BytesValue)
}
::std::string* TestMessage::mutable_bytesvalue() {
  
  // @@protoc_insertion_point(field_mutable:FVU.TestMessage.BytesValue)
  return bytesvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestMessage::release_bytesvalue() {
  // @@protoc_insertion_point(field_release:FVU.TestMessage.BytesValue)
  
  return bytesvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestMessage::set_allocated_bytesvalue(::std::string* bytesvalue) {
  if (bytesvalue != NULL) {
    
  } else {
    
  }
  bytesvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytesvalue);
  // @@protoc_insertion_point(field_set_allocated:FVU.TestMessage.BytesValue)
}

// repeated .FVU.ChildMessage childMessage = 11;
int TestMessage::childmessage_size() const {
  return childmessage_.size();
}
void TestMessage::clear_childmessage() {
  childmessage_.Clear();
}
const ::FVU::ChildMessage& TestMessage::childmessage(int index) const {
  // @@protoc_insertion_point(field_get:FVU.TestMessage.childMessage)
  return childmessage_.Get(index);
}
::FVU::ChildMessage* TestMessage::mutable_childmessage(int index) {
  // @@protoc_insertion_point(field_mutable:FVU.TestMessage.childMessage)
  return childmessage_.Mutable(index);
}
::FVU::ChildMessage* TestMessage::add_childmessage() {
  // @@protoc_insertion_point(field_add:FVU.TestMessage.childMessage)
  return childmessage_.Add();
}
::google::protobuf::RepeatedPtrField< ::FVU::ChildMessage >*
TestMessage::mutable_childmessage() {
  // @@protoc_insertion_point(field_mutable_list:FVU.TestMessage.childMessage)
  return &childmessage_;
}
const ::google::protobuf::RepeatedPtrField< ::FVU::ChildMessage >&
TestMessage::childmessage() const {
  // @@protoc_insertion_point(field_list:FVU.TestMessage.childMessage)
  return childmessage_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace FVU

// @@protoc_insertion_point(global_scope)
